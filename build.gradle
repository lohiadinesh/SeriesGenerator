apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot' 
apply plugin: 'application'
apply plugin: 'jacoco'

buildscript {
	ext {
		springBootVersion = '1.3.3.RELEASE'
	}
	repositories {
  		 mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
	}
}

jar.archiveName "SeriesGenerator.jar"
sourceCompatibility = 1.8
targetCompatibility = 1.8

version = '1.0'
jar {
	baseName = 'SeriesGenerator'
	version = '1.0'
    manifest {
        attributes 'Implementation-Title': 'Series Generator',
                   'Implementation-Version': version
    }
}

repositories {
  	 mavenCentral()
}

springBoot {
    executable = true
}

dependencies {
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    testCompile group: 'junit', name: 'junit', version: '4.+'
    testCompile 'org.hamcrest:java-hamcrest:2.0.0.0'
    testCompile('org.springframework.boot:spring-boot-starter-test')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('javax.inject:javax.inject:1')
	compile("org.apache.tomcat.embed:tomcat-embed-jasper")
    compile("javax.servlet:jstl")
}

eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

test {
    systemProperties 'property': 'value'
}

test.finalizedBy(jacocoTestReport)

jacocoTestReport {
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    '**/*Application*'
            ])
        })
    }
}


uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}
